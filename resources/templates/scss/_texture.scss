
/*------------------------------------*\
    #BOX STYLES
\*------------------------------------*/

/**
 * Generic `.boxout` class.
 */

.boxout {
	background: $grey-lighter;
	@include clearfix;
	margin-bottom: $baseline;
	padding: $baseline $baseline 0;
}




/*------------------------------------*\
    #ALERTS
\*------------------------------------*/

/**
 * Base alert/notification  styles. Extend this object with an `.alert--*` skin
 * class. Includes adjusts for common elements found within alerts.
 *
 * 1. Link styles are adjusted for the darker/coloured alert background.
 * 2. Due to updated link styles, `.btn` colours need to be reset.
 */
 
.alert {
	background-color: $alert-bg;
	border-bottom: 3px $alert-border-style $alert-border-color;
	box-shadow: 3px 3px 0 rgba($black,.05);
	clear: both;
	color: $alert-color;
	font-family: $font-family;
	margin-bottom: $baseline*2;
	padding: $baseline $baseline $baseline/2;

	p,
	ul,
	ol {
		margin-bottom: $baseline/2;
	}
	
	a { /* [1] */
		color: $grey-dark;
		font-weight: 600;
		
		&:visited {
			color: $grey-dark;
		}
		
		&:hover,
		&:focus {
			color: $white;
		}
	}
	
	.btn {
		color: $btn-color; /* [2] */
		
		&:visited {
			color: $btn-color;
		}
	}
}

/**
 * Skin for success/info/error alerts. Extends `.alert`.
 */

.alert--success {
	background: $alert-success-bg;
	border-color: $alert-success-border-color;
	color: $alert-success-color;
}

.alert--info {
	background: $alert-info-bg;
	border-color: $alert-info-border-color;
	color: $alert-info-color;
}

.alert--error {
	background: $alert-error-bg;
	border-color: $alert-error-border-color;
	color: $alert-error-color;
}

/**
 * Main title of the alert message.
 *
 * 1. Depending on the type of alert (default/info/success/error) an icon is
 *    display alongside the title. Extends `.icon--*` in _fontello.scss.
 * 2. You can display the entire message within the `.alert__title` provided it
 *    isn't too long. If you do this, you might want to reduce the size/lighten
 *    some of the text. To do this wrap the relevant text in a `span`.
 * 3. Any `.btn` displayed inline also gets some special attention for vertical
 *    alignment.
 * 4. Added padding so I could move icon into space with a negative margin. This
 *    is for when a long like of text (2) is within the title it stops content
 *    running under the icon which is a problem when it's a `.flag` or `.btn`
 *    object.
 */

.alert__title {
	color: $white;
	@include font-size(18);
	min-height: 25px;
	margin-bottom: $baseline/2;
	padding-left: 35px; /* [4] */
	
	&:before { /* [1] */
		font-size: 140%;
		margin: 0 $baseline/2 0 -35px; /* [4] */
		opacity: .75;
		top: 2px;
		position: relative;
	}
	
	span { /* [2] */
		color: $alert-bg;
		@include font-size($font-size);
		font-weight: 400;
		
		.alert--success & 	{color: $alert-success-color;}
		.alert--info & 		{color: $alert-info-color;}
		.alert--error & 	{color: $alert-error-color;}
	}
	
	.btn { /* [3] */
		margin: -2px 0 0 $baseline/4;
		vertical-align: middle;
	}
}

/**
 * Close button. Extends `.btn-close` in _buttons.scss.
 */

.alert__close {
	background: url(../img/sprite/btn-close.png) no-repeat 0 -20px;
	float: right;
	margin: 2px 0 $baseline/4 $baseline/2;
	
	.alert--success & 	{background-position: 0 -40px;}
	.alert--info & 		{background-position: 0 -60px;}
	.alert--error & 	{background-position: 0 -80px;}
}

